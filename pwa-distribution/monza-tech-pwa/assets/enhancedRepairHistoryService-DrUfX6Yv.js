import{s as g,aP as y}from"./index-CnqA2hW7.js";const _=l=>{if(Array.isArray(l))return l.map(e=>_(e));if(l&&typeof l=="object"){const e={};for(const[t,o]of Object.entries(l))o===null?e[t]=void 0:e[t]=_(o);return e}return l===null?void 0:l},w=l=>["easy","medium","hard","expert"].includes(l),S=l=>["easy","medium","hard"].includes(l),d=l=>l&&w(l)?l:"medium",b=l=>l&&S(l)?l:"medium",p=l=>{try{const e=localStorage.getItem(l);return e?JSON.parse(e):[]}catch(e){return console.error(`Error reading localStorage for ${l}:`,e),[]}},m=(l,e)=>{try{localStorage.setItem(l,JSON.stringify(e))}catch(t){console.error(`Error writing localStorage for ${l}:`,t)}};class v{async saveRepairHistory(e){try{const t={...e,parts_used:JSON.stringify(e.parts_used),difficulty_level:d(e.difficulty_level),id:`repair_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,created_at:new Date().toISOString(),updated_at:new Date().toISOString()};try{const{data:r,error:a}=await g.from("audit_logs").insert([{table_name:"enhanced_repair_history",record_id:t.id,action:"INSERT",new_data:t,user_id:"system",user_email:"system@monza.tech",user_role:"system",ip_address:"127.0.0.1",user_agent:"MonzaTech-System",timestamp:new Date().toISOString()}]).select().single();if(a)throw a}catch(r){console.warn("Supabase insert failed, using localStorage fallback:",r)}const o=p("enhanced_repair_history");o.push(t),m("enhanced_repair_history",o);const s={...t,parts_used:typeof t.parts_used=="string"?JSON.parse(t.parts_used):t.parts_used,difficulty_level:d(t.difficulty_level)};return await this.updatePartsKnowledge(e.parts_used,e.car_model),await this.saveRepairSolution(e),await this.notifyMonzaBotLearning(s),s}catch(t){return console.error("Error saving repair history:",t),null}}async getCarRepairHistory(e){try{try{const{data:o,error:s}=await g.from("audit_logs").select("*").eq("table_name","enhanced_repair_history").contains("new_data",{car_vin:e}).order("timestamp",{ascending:!1});if(!s&&o)return o.map(r=>r.new_data).filter(Boolean).map(r=>_({...r,parts_used:typeof r.parts_used=="string"?JSON.parse(r.parts_used):r.parts_used,difficulty_level:d(r.difficulty_level)}))}catch(o){console.warn("Supabase query failed, using localStorage fallback:",o)}return p("enhanced_repair_history").filter(o=>o.car_vin===e).map(o=>_({...o,parts_used:typeof o.parts_used=="string"?JSON.parse(o.parts_used):o.parts_used,difficulty_level:d(o.difficulty_level)}))}catch(t){return console.error("Error fetching car repair history:",t),[]}}async getClientRepairHistory(e){try{try{const{data:o,error:s}=await g.from("audit_logs").select("*").eq("table_name","enhanced_repair_history").ilike("new_data->client_name",`%${e}%`).order("timestamp",{ascending:!1});if(!s&&o)return o.map(r=>r.new_data).filter(Boolean).map(r=>_({...r,parts_used:typeof r.parts_used=="string"?JSON.parse(r.parts_used):r.parts_used,difficulty_level:d(r.difficulty_level)}))}catch(o){console.warn("Supabase query failed, using localStorage fallback:",o)}return p("enhanced_repair_history").filter(o=>{var s;return(s=o.client_name)==null?void 0:s.toLowerCase().includes(e.toLowerCase())}).map(o=>_({...o,parts_used:typeof o.parts_used=="string"?JSON.parse(o.parts_used):o.parts_used,difficulty_level:d(o.difficulty_level)}))}catch(t){return console.error("Error fetching client repair history:",t),[]}}async searchRepairHistory(e){try{try{const{data:s,error:r}=await g.from("audit_logs").select("*").eq("table_name","enhanced_repair_history").or(`new_data->car_vin.ilike.%${e}%,new_data->client_name.ilike.%${e}%,new_data->issue_description.ilike.%${e}%,new_data->solution_description.ilike.%${e}%`).order("timestamp",{ascending:!1});if(!r&&s)return s.map(a=>a.new_data).filter(Boolean).map(a=>_({...a,parts_used:typeof a.parts_used=="string"?JSON.parse(a.parts_used):a.parts_used,difficulty_level:d(a.difficulty_level)}))}catch(s){console.warn("Supabase query failed, using localStorage fallback:",s)}const t=p("enhanced_repair_history"),o=e.toLowerCase();return t.filter(s=>{var r,a,i,n;return((r=s.car_vin)==null?void 0:r.toLowerCase().includes(o))||((a=s.client_name)==null?void 0:a.toLowerCase().includes(o))||((i=s.issue_description)==null?void 0:i.toLowerCase().includes(o))||((n=s.solution_description)==null?void 0:n.toLowerCase().includes(o))}).map(s=>_({...s,parts_used:typeof s.parts_used=="string"?JSON.parse(s.parts_used):s.parts_used,difficulty_level:d(s.difficulty_level)}))}catch(t){return console.error("Error searching repair history:",t),[]}}async updatePartsKnowledge(e,t){try{const o=p("parts_knowledge_base");for(const s of e){const r=o.find(a=>a.part_number===s.part_number);if(r){const a=r.compatible_models||[],i=Array.isArray(a)?[...new Set([...a,t])]:[t];r.compatible_models=i,r.usage_count=(r.usage_count||0)+1,r.updated_at=new Date().toISOString()}else o.push({id:`part_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,part_number:s.part_number,part_name:s.part_name,compatible_models:[t],usage_count:1,installation_difficulty:"medium",created_at:new Date().toISOString(),updated_at:new Date().toISOString()})}m("parts_knowledge_base",o)}catch(o){console.error("Error updating parts knowledge:",o)}}async saveRepairSolution(e){try{const t=e.issue_description.toLowerCase().split(/\s+/).filter(r=>r.length>3).slice(0,10),o={id:`solution_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,issue_keywords:t,issue_description:e.issue_description,solution_description:e.solution_description,repair_steps:e.repair_steps,required_parts:JSON.stringify(e.parts_used),estimated_time_hours:e.labor_hours,difficulty_level:d(e.difficulty_level),car_models:[e.car_model],technician_notes:`Completed by ${e.technician_name}`,photos:e.after_photos||[],usage_count:1,effectiveness_rating:e.quality_rating,created_at:new Date().toISOString(),updated_at:new Date().toISOString()},s=p("repair_solutions_kb");s.push(o),m("repair_solutions_kb",s)}catch(t){console.error("Error saving repair solution:",t)}}async notifyMonzaBotLearning(e){try{const t=`New repair completed for ${e.car_model}:
        Issue: ${e.issue_description}
        Solution: ${e.solution_description}
        Parts used: ${e.parts_used.map(o=>o.part_name).join(", ")}
        Duration: ${e.labor_hours} hours
        Please learn from this repair case for future assistance.`;await y.processEnhancedMessage(t,{source:"repair_learning",formType:"repair",extractedData:e})}catch(t){console.error("Error notifying MonzaBot for learning:",t)}}async getPartsKnowledge(e,t){try{let s=p("parts_knowledge_base");return e&&(s=s.filter(r=>r.part_number===e)),t&&(s=s.filter(r=>{var a;return(a=r.compatible_models)==null?void 0:a.includes(t)})),s.sort((r,a)=>(a.usage_count||0)-(r.usage_count||0)),s.map(r=>({...r,installation_difficulty:b(r.installation_difficulty)}))}catch(o){return console.error("Error fetching parts knowledge:",o),[]}}async getRepairSolutions(e,t){try{let s=p("repair_solutions_kb");return t&&(s=s.filter(a=>{var i;return(i=a.car_models)==null?void 0:i.includes(t)})),s.filter(a=>e.some(i=>{var n;return(n=a.issue_keywords)==null?void 0:n.some(u=>u.includes(i.toLowerCase()))})).map(a=>({...a,required_parts:typeof a.required_parts=="string"?JSON.parse(a.required_parts):a.required_parts,difficulty_level:d(a.difficulty_level)}))}catch(o){return console.error("Error fetching repair solutions:",o),[]}}async saveRepairHistoryWithPhotos(e,t=[]){try{const o={...e,photos:t.map(r=>r.dataUrl),before_photos:t.filter(r=>r.photoType==="before").map(r=>r.dataUrl),after_photos:t.filter(r=>r.photoType==="after").map(r=>r.dataUrl),photo_documentation:{totalPhotos:t.length,photoTypes:t.reduce((r,a)=>(r[a.photoType]=(r[a.photoType]||0)+1,r),{}),photoDescriptions:t.map(r=>({type:r.photoType,description:r.description,timestamp:r.timestamp,mechanicName:r.mechanicName})),documentationQuality:this.assessDocumentationQuality(t)}},s=await this.saveRepairHistory(o);return s&&t.length>0&&await this.notifyMonzaBotPhotoLearning(s,t),s}catch(o){return console.error("Error saving repair history with photos:",o),null}}assessDocumentationQuality(e){if(e.length===0)return{score:0,feedback:"No photos provided"};const t=e.some(c=>c.photoType==="before"),o=e.some(c=>c.photoType==="after"),s=e.some(c=>c.photoType==="during"),r=e.some(c=>c.photoType==="issue"),a=e.every(c=>c.description&&c.description.length>10),i=e.every(c=>c.description&&c.description.length>30);let n=0;const u=[];return t?n+=25:u.push("Missing before photos"),o?n+=25:u.push("Missing after photos"),s?n+=15:u.push("Consider adding during-repair photos"),r?n+=10:u.push("Consider documenting specific issues"),a?n+=15:u.push("Some photos lack descriptions"),i?n+=10:u.push("Photo descriptions could be more detailed"),{score:n,grade:n>=80?"Excellent":n>=60?"Good":n>=40?"Fair":"Poor",feedback:u.join("; "),recommendations:this.getDocumentationRecommendations(n,{hasBeforePhotos:t,hasAfterPhotos:o,hasDuringPhotos:s,hasIssuePhotos:r,allHaveDescriptions:a,descriptionsDetailed:i})}}getDocumentationRecommendations(e,t){const o=[];return t.hasBeforePhotos||o.push("Always take before photos to document initial condition"),t.hasAfterPhotos||o.push("Take after photos to show completed work quality"),t.hasDuringPhotos||o.push("Document key repair steps with during-repair photos"),t.hasIssuePhotos||o.push("Document specific issues found for future reference"),t.allHaveDescriptions||o.push("Add detailed descriptions to all photos"),t.descriptionsDetailed||o.push("Include more technical details in photo descriptions"),e>=80&&o.push("Excellent documentation! This will greatly help future repairs."),o}async notifyMonzaBotPhotoLearning(e,t){var o,s;try{const r=t.map(i=>`${i.photoType}: ${i.description}`).join("; "),a=`New photo-documented repair completed for ${e.car_model}:
        
        Repair Details:
        - Issue: ${e.issue_description}
        - Solution: ${e.solution_description}
        - Parts used: ${e.parts_used.map(i=>i.part_name).join(", ")}
        - Duration: ${e.labor_hours} hours
        
        Photo Documentation (${t.length} photos):
        ${r}
        
        Documentation Quality: ${(o=e.photo_documentation)==null?void 0:o.grade}
        
        Please analyze these photos and repair details to improve future repair recommendations and assist mechanics with similar issues.`;await y.learnFromRepairPhotos({carModel:e.car_model,carCode:e.car_vin,customerName:e.client_name,mechanicName:e.technician_name,issueDescription:e.issue_description,workNotes:e.solution_description,repairPhotos:t,beforePhotos:t.filter(i=>i.photoType==="before"),duringPhotos:t.filter(i=>i.photoType==="during"),afterPhotos:t.filter(i=>i.photoType==="after"),issuePhotos:t.filter(i=>i.photoType==="issue"),photoCount:t.length,timestamp:e.completion_date||new Date().toISOString(),status:"completed",tags:["photo_documentation","repair_session",e.car_model.toLowerCase()],monzaBotLearning:{hasPhotos:!0,photoCount:t.length,issuesDocumented:t.filter(i=>i.photoType==="issue").length,repairProgress:t.filter(i=>["before","during","after"].includes(i.photoType)).length,learningTriggered:!0,lastLearningDate:new Date().toISOString(),documentationQuality:((s=e.photo_documentation)==null?void 0:s.score)||0}})}catch(r){console.error("Error notifying MonzaBot for photo learning:",r)}}async getPhotoBasedRepairSuggestions(e,t){try{const s=JSON.parse(localStorage.getItem("enhanced_repair_sessions")||"[]").filter(r=>{var a,i;return((a=r.monzaBotLearning)==null?void 0:a.hasPhotos)&&((i=r.monzaBotLearning)==null?void 0:i.documentationQuality)>=60&&(r.carModel.toLowerCase().includes(e.toLowerCase())||r.issueDescription.toLowerCase().includes(t.toLowerCase()))});if(s.length>0){const r=await y.getRepairSuggestions(e,t);return s.map(a=>({...a,monzaBotSuggestions:r.textResponse}))}return[]}catch(o){return console.error("Error getting photo-based repair suggestions:",o),[]}}async searchRepairsByPhotoContent(e){try{const t=await this.searchRepairHistory(e),r=JSON.parse(localStorage.getItem("enhanced_repair_sessions")||"[]").filter(n=>n.repairPhotos?n.repairPhotos.some(u=>u.description.toLowerCase().includes(e.toLowerCase()))||n.issueDescription.toLowerCase().includes(e.toLowerCase()):!1).map(n=>{var u,c,f;return{id:n.id,car_vin:n.carCode,car_model:n.carModel,client_name:n.customerName,issue_description:n.issueDescription,solution_description:n.workNotes,technician_name:n.mechanicName,repair_date:n.timestamp.split("T")[0],completion_date:n.timestamp.split("T")[0],photos:((u=n.repairPhotos)==null?void 0:u.map(h=>h.dataUrl))||[],before_photos:((c=n.beforePhotos)==null?void 0:c.map(h=>h.dataUrl))||[],after_photos:((f=n.afterPhotos)==null?void 0:f.map(h=>h.dataUrl))||[],parts_used:[],labor_hours:0,created_at:n.timestamp,updated_at:n.timestamp}});return[...t,...r].filter((n,u,c)=>u===c.findIndex(f=>f.car_vin===n.car_vin&&f.repair_date===n.repair_date))}catch(t){return console.error("Error searching repairs by photo content:",t),[]}}}const L=new v;export{v as EnhancedRepairHistoryService,L as enhancedRepairHistoryService};
