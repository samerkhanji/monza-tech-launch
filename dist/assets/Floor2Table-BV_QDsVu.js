var r,e=Object.defineProperty,t=(r,e,t)=>new Promise((n,o)=>{var a=r=>{try{l(t.next(r))}catch(e){o(e)}},c=r=>{try{l(t.throw(r))}catch(e){o(e)}},l=r=>r.done?n(r.value):Promise.resolve(r.value).then(a,c);l((t=t.apply(r,e)).next())});import{s as n}from"./index-BmUpYGrm.js";import"./vendor-vN6PtkFd.js";import"./charts-XrXYWaKo.js";import"./utils-DhcIvS4g.js";class o{static setupRealtimeSubscription(r){this.refreshCallback=r;return n.channel("floor2-cars-updates").on("postgres_changes",{event:"UPDATE",schema:"public",table:"car_inventory",filter:"current_floor=eq.SHOWROOM_2"},r=>{this.refreshCallback&&this.refreshCallback()}).on("postgres_changes",{event:"INSERT",schema:"public",table:"car_inventory",filter:"current_floor=eq.SHOWROOM_2"},r=>{this.refreshCallback&&this.refreshCallback()}).on("postgres_changes",{event:"DELETE",schema:"public",table:"car_inventory",filter:"current_floor=eq.SHOWROOM_2"},r=>{this.refreshCallback&&this.refreshCallback()}).subscribe()}static cleanupSubscription(r){r&&n.removeChannel(r)}static getAllCars(){return t(this,null,function*(){try{const{data:r,error:e}=yield n.from("car_inventory").select("*").eq("current_floor","SHOWROOM_2");if(e)throw e;return r||[]}catch(r){return[]}})}static getCarCount(){return t(this,null,function*(){try{const{count:r,error:e}=yield n.from("car_inventory").select("*",{count:"exact",head:!0}).eq("current_floor","SHOWROOM_2");return e?0:r||0}catch(r){return 0}})}static addCar(r,e){return t(this,null,function*(){try{const{error:t}=yield n.from("car_inventory").update({current_floor:"SHOWROOM_2",notes:e||`Moved to Floor 2 on ${(new Date).toLocaleDateString()}`,updated_at:(new Date).toISOString()}).eq("id",r);return!t}catch(t){return!1}})}static removeCar(r){return t(this,null,function*(){try{const{error:e}=yield n.from("car_inventory").update({current_floor:"INVENTORY",notes:`Removed from Floor 2 on ${(new Date).toLocaleDateString()}`,updated_at:(new Date).toISOString()}).eq("id",r);return!e}catch(e){return!1}})}static clearAllCars(){return t(this,null,function*(){try{const{error:r}=yield n.from("car_inventory").update({current_floor:"INVENTORY",notes:`Cleared from Floor 2 on ${(new Date).toLocaleDateString()}`,updated_at:(new Date).toISOString()}).eq("current_floor","SHOWROOM_2");return!r}catch(r){return!1}})}}((r,t,n)=>{t in r?e(r,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):r[t]=n})(o,"symbol"!=typeof(r="refreshCallback")?r+"":r,null);export{o as Floor2Table};
