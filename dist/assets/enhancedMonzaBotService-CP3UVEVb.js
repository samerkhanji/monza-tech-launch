var e=Object.defineProperty,t=Object.defineProperties,o=Object.getOwnPropertyDescriptors,n=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,a=(t,o,n)=>o in t?e(t,o,{enumerable:!0,configurable:!0,writable:!0,value:n}):t[o]=n,i=(e,t)=>{for(var o in t||(t={}))r.call(t,o)&&a(e,o,t[o]);if(n)for(var o of n(t))s.call(t,o)&&a(e,o,t[o]);return e},c=(e,n)=>t(e,o(n)),l=(e,t,o)=>new Promise((n,r)=>{var s=e=>{try{i(o.next(e))}catch(t){r(t)}},a=e=>{try{i(o.throw(e))}catch(t){r(t)}},i=e=>e.done?n(e.value):Promise.resolve(e.value).then(s,a);i((o=o.apply(e,t)).next())});import{s as u}from"./index-BmUpYGrm.js";const h={processEnhancedMessage(e){return l(this,arguments,function*(e,t={},o=!0){var n;try{const{data:r,error:s}=yield u.functions.invoke("monzabot-enhanced",{body:{message:e,context:c(i({},t),{userRole:null==(n=t.user)?void 0:n.role,currentRoute:window.location.pathname,timestamp:(new Date).toISOString()}),imageData:t.imageData,audioEnabled:o}});return s?{textResponse:`Hello! I'm MonzaBot. I received your message: "${e}". I can help you with car inventory, VIN lookups, repairs, and much more. What would you like to know?`,audioResponse:void 0,type:"fallback_response"}:{textResponse:r.textResponse,audioResponse:r.audioResponse,formFillData:r.formFillData,type:r.type||"assistant_response",databaseContext:r.databaseContext,suggestedActions:r.suggestedActions}}catch(r){return{textResponse:`Hello! I'm MonzaBot, your Monza S.A.L. assistant. I received: "${e}". I can help you with:\n\n🚗 Car inventory and VIN lookups\n🔧 Repair management\n📊 Analytics and reports\n📍 Car locations and movements\n📋 PDI assistance\n\nWhat would you like help with?`,audioResponse:void 0,type:"fallback_response"}}})},analyzeCarImage(e){return l(this,arguments,function*(e,t={}){return this.processEnhancedMessage("Analyze this car image and extract all visible information for new car arrival processing. Provide structured data that can auto-fill forms.",c(i({},t),{imageData:e,source:"car_image_analysis"}))})},processImageOCR(e){return l(this,null,function*(){return{extractedData:(yield this.processEnhancedMessage("Extract text and data from this image using OCR. Return structured information.",{imageData:e,source:"image_ocr"})).formFillData||{}}})},processVoiceToText(e){return l(this,null,function*(){try{const t=new FormData;t.append("audio",e,"recording.webm");const{data:o,error:n}=yield u.functions.invoke("voice-to-text",{body:t});if(n)throw n;return{text:o.text||""}}catch(t){throw new Error("Failed to process voice input")}})},suggestFormFill(e,t){return l(this,null,function*(){return(yield this.processEnhancedMessage(`Generate form suggestions for ${e} based on this data: ${JSON.stringify(t)}`,{source:"form_suggestions",formType:e,extractedData:t})).formFillData||{}})},getInventoryInsights(){return l(this,null,function*(){return this.processEnhancedMessage("Analyze current inventory status, identify low stock items, and recommend actions based on recent activity",{source:"inventory_analysis",currentRoute:"/inventory"})})},getNewArrivalAssistance(e){return l(this,null,function*(){const t=e?`Help process this new car arrival: ${JSON.stringify(e)}`:"Provide guidance for processing new car arrivals and current arrival status";return this.processEnhancedMessage(t,{source:"new_arrivals",currentRoute:"/new-car-arrivals",formType:"new_car_arrival",extractedData:e})})},getShippingETAUpdates(){return l(this,null,function*(){return this.processEnhancedMessage("Provide daily updates on shipping ETAs for ordered cars and parts. Notify of any delays or changes in expected delivery dates.",{source:"shipping_eta_updates",currentRoute:"/shipping-eta"})})},trackShipment(e,t){return l(this,null,function*(){return this.processEnhancedMessage(`Track shipment status for: ${e} with ${t}`,{source:"shipment_tracking",trackingCode:e,shippingCompany:t})})},scheduleDailyETACheck(){return l(this,null,function*(){try{yield this.processEnhancedMessage("Schedule daily shipping ETA updates and notifications for any delays",{source:"eta_scheduling",timestamp:(new Date).toISOString()})}catch(e){}})},notifyShippingDelay(e,t){return l(this,null,function*(){try{const o=`Shipping delay detected for ${t} order ${e}. Please notify relevant stakeholders.`;yield this.processEnhancedMessage(o,{source:"shipping_delay",extractedData:{orderId:e,orderType:t}})}catch(o){}})},learnFromRepairPhotos(e){return l(this,null,function*(){var t,o,n,r;try{const s=`Learn from this repair session with photo documentation. Analyze patterns, identify common issues, and improve future repair recommendations.\n      \n      Car: ${e.carModel} (${e.carCode})\n      Customer: ${e.customerName}\n      Mechanic: ${e.mechanicName}\n      Issue: ${e.issueDescription}\n      Work Notes: ${e.workNotes}\n      \n      Photo Documentation:\n      - Total Photos: ${e.photoCount}\n      - Before Photos: ${(null==(t=e.beforePhotos)?void 0:t.length)||0}\n      - During Photos: ${(null==(o=e.duringPhotos)?void 0:o.length)||0}\n      - After Photos: ${(null==(n=e.afterPhotos)?void 0:n.length)||0}\n      - Issue Photos: ${(null==(r=e.issuePhotos)?void 0:r.length)||0}\n      \n      Please analyze this repair case and add it to your knowledge base for future similar issues.`;return yield this.processEnhancedMessage(s,{source:"repair_photo_learning",formType:"photo_documentation",extractedData:e,repairPhotos:e.repairPhotos})}catch(s){throw new Error("Failed to process repair photo learning")}})},analyzeRepairPhotos(e,t,o){return l(this,null,function*(){try{const n=e.map(e=>({type:e.photoType,description:e.description,timestamp:e.timestamp,mechanicName:e.mechanicName,issueCategory:e.issueCategory||"general",severity:e.severity||"minor"})),r=`Analyze these repair photos for ${t} with issue: "${o}". \n      \n      Photo Details:\n      ${JSON.stringify(n,null,2)}\n      \n      Please provide:\n      1. Pattern analysis of similar issues\n      2. Recommendations for future repairs\n      3. Quality assessment of documentation\n      4. Suggested preventive measures`;return yield this.processEnhancedMessage(r,{source:"repair_photo_analysis",formType:"photo_documentation",extractedData:{carModel:t,issueDescription:o,photoAnalysis:n,photoCount:e.length}})}catch(n){throw new Error("Failed to analyze repair photos")}})},getRepairSuggestions(e,t){return l(this,null,function*(){try{const o=JSON.parse(localStorage.getItem("enhanced_repair_sessions")||"[]"),n=(JSON.parse(localStorage.getItem("enhanced_repair_photos")||"[]"),o.filter(o=>o.carModel.toLowerCase().includes(e.toLowerCase())||o.issueDescription.toLowerCase().includes(t.toLowerCase()))),r=`Based on ${n.length} similar repair cases with photo documentation, provide repair suggestions for:\n      \n      Car Model: ${e}\n      Issue: ${t}\n      \n      Please provide:\n      1. Step-by-step repair guidance\n      2. Parts likely needed\n      3. Time estimation\n      4. Potential complications to watch for\n      5. Photo documentation recommendations`;return yield this.processEnhancedMessage(r,{source:"repair_suggestions_with_photos",formType:"repair",extractedData:{carModel:e,issueDescription:t,similarCasesCount:n.length,historicalData:n.slice(0,5)}})}catch(o){throw new Error("Failed to get repair suggestions")}})},analyzePhotoDocumentationQuality(e){return l(this,null,function*(){var t,o,n,r,s,a;try{const l={hasBeforePhotos:(null==(t=e.beforePhotos)?void 0:t.length)>0,hasAfterPhotos:(null==(o=e.afterPhotos)?void 0:o.length)>0,hasDuringPhotos:(null==(n=e.duringPhotos)?void 0:n.length)>0,hasIssuePhotos:(null==(r=e.issuePhotos)?void 0:r.length)>0,totalPhotos:e.photoCount,photoDescriptionQuality:null==(s=e.repairPhotos)?void 0:s.every(e=>e.description&&e.description.length>10),mechanicConsistency:null==(a=e.repairPhotos)?void 0:a.every(t=>t.mechanicName===e.mechanicName)},u=`Analyze the quality of photo documentation for this repair session:\n      \n      ${JSON.stringify(l,null,2)}\n      \n      Provide feedback on documentation quality and suggestions for improvement.`;return yield this.processEnhancedMessage(u,{source:"photo_quality_analysis",formType:"photo_documentation",extractedData:c(i({},e),{qualityMetrics:l})})}catch(l){throw new Error("Failed to analyze photo documentation quality")}})},searchRepairsByPhotos(e){return l(this,null,function*(){try{const t=JSON.parse(localStorage.getItem("enhanced_repair_sessions")||"[]"),o=(JSON.parse(localStorage.getItem("enhanced_repair_photos")||"[]"),t.filter(e=>{var t;return(null==(t=e.monzaBotLearning)?void 0:t.hasPhotos)&&e.photoCount>0})),n=`Search through ${o.length} repair sessions with photo documentation for: "${e}"\n      \n      Please find relevant repair cases and provide:\n      1. Matching repair cases\n      2. Photo-documented solutions\n      3. Success patterns\n      4. Lessons learned`;return yield this.processEnhancedMessage(n,{source:"photo_repair_search",formType:"photo_documentation",extractedData:{searchQuery:e,availableSessions:o.length,searchContext:o.slice(0,10)}})}catch(t){throw new Error("Failed to search repair history")}})},generateRepairReport(e){return l(this,null,function*(){try{const t=JSON.parse(localStorage.getItem(`car_photos_${e}`)||"[]"),o=JSON.parse(localStorage.getItem("enhanced_repair_sessions")||"[]").filter(t=>t.carCode===e),n=`Generate a comprehensive repair report for car ${e} based on:\n      \n      - ${t.length} photos documented\n      - ${o.length} repair sessions\n      \n      Include:\n      1. Repair history timeline\n      2. Common issues identified\n      3. Photo documentation quality\n      4. Maintenance recommendations\n      5. Value assessment`;return yield this.processEnhancedMessage(n,{source:"repair_report_generation",formType:"photo_documentation",extractedData:{carCode:e,photoCount:t.length,sessionCount:o.length,repairData:o}})}catch(t){throw new Error("Failed to generate repair report")}})}};export{h as e};
