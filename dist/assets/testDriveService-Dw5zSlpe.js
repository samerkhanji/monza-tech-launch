var e=Object.defineProperty,t=Object.defineProperties,r=Object.getOwnPropertyDescriptors,i=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,s=Object.prototype.propertyIsEnumerable,o=(t,r,i)=>r in t?e(t,r,{enumerable:!0,configurable:!0,writable:!0,value:i}):t[r]=i,a=(e,t)=>{for(var r in t||(t={}))n.call(t,r)&&o(e,r,t[r]);if(i)for(var r of i(t))s.call(t,r)&&o(e,r,t[r]);return e},c=(e,i)=>t(e,r(i));const l=class e{static getInstance(){return e.instance||(e.instance=new e),e.instance}endTestDrive(e,t){const r=t||new Date,i=new Date(e.testDriveStartTime),n=r.getTime()-i.getTime(),s=Math.round(n/6e4);return c(a({},e),{isOnTestDrive:!1,testDriveEndTime:r.toISOString(),actualDuration:s})}addToHistory(e,t){const r=e.testDriveHistory||[];return c(a({},e),{isOnTestDrive:!1,testDriveStartTime:void 0,testDriveEndTime:void 0,testDriverName:void 0,testDriverPhone:void 0,testDriverLicense:void 0,testDriveNotes:void 0,testDriveHistory:[...r,t]})}formatDuration(e){if(e<60)return`${e} min`;const t=Math.floor(e/60),r=e%60;return 0===r?`${t}h`:`${t}h ${r}m`}getTestDriveSummary(e){const t=e.filter(e=>e.actualDuration);return{totalTestDrives:e.length,clientTestDrives:e.filter(e=>e.isClientTestDrive).length,employeeTestDrives:e.filter(e=>!e.isClientTestDrive).length,averageDuration:t.length>0?Math.round(t.reduce((e,t)=>e+(t.actualDuration||0),0)/t.length):0,totalDuration:t.reduce((e,t)=>e+(t.actualDuration||0),0)}}};var v,D;o(l,"symbol"!=typeof(v="instance")?v+"":v,D);let u=l;const d=u.getInstance();export{u as T,d as t};
