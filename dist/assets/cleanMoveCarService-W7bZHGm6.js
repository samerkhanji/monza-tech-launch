var r=(r,t,e)=>new Promise((n,o)=>{var a=r=>{try{c(e.next(r))}catch(t){o(t)}},i=r=>{try{c(e.throw(r))}catch(t){o(t)}},c=r=>r.done?n(r.value):Promise.resolve(r.value).then(a,i);c((e=e.apply(r,t)).next())});import{s as t}from"./index-BmUpYGrm.js";import"./vendor-vN6PtkFd.js";import"./charts-XrXYWaKo.js";import"./utils-DhcIvS4g.js";function e(e,n){return r(this,null,function*(){try{const{data:r,error:o}=yield t.from("car_inventory").update({current_floor:n,updated_at:(new Date).toISOString()}).eq("vin",e).select().single();if(o)throw o;return r}catch(r){throw r}})}function n(e){return r(this,null,function*(){try{const{data:r,error:n}=yield t.from("car_inventory").select("*").eq("current_floor",e).order("updated_at",{ascending:!1});if(n)throw n;return r||[]}catch(r){return[]}})}export{n as getCarsByFloor,e as moveCarByVin};
